{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { courses as SEED_COURSES, instructors as SEED_INSTRUCTORS } from '../mock/data';\nfunction delay(ms = 400) {\n  return new Promise(res => setTimeout(res, ms));\n}\nfunction clone(v) {\n  return JSON.parse(JSON.stringify(v));\n}\nlet DB = clone(SEED_COURSES).map(c => _objectSpread({\n  published: true\n}, c));\nconst INSTRUCTORS = clone(SEED_INSTRUCTORS);\nfunction findCourseIndex(id) {\n  return DB.findIndex(x => x.id === id);\n}\nexport async function getCourses({\n  offset = 0,\n  limit = 10,\n  q = '',\n  category,\n  onlyPublished = false\n} = {}) {\n  await delay();\n  let arr = DB;\n  if (q) {\n    const qq = String(q).toLowerCase();\n    arr = arr.filter(c => c.title.toLowerCase().includes(qq) || (c.author || '').toLowerCase().includes(qq));\n  }\n  if (category) {\n    arr = arr.filter(c => c.categoryId === category);\n  }\n  if (onlyPublished) {\n    arr = arr.filter(c => c.published !== false);\n  }\n  const total = arr.length;\n  const items = arr.slice(offset, offset + limit);\n  return {\n    items: clone(items),\n    total,\n    hasMore: offset + limit < total\n  };\n}\nexport async function getCourse(id) {\n  await delay();\n  const c = DB.find(x => x.id === id) || DB[0];\n  const teacher = INSTRUCTORS.find(t => t.id === c.teacherId) || INSTRUCTORS[0];\n  return _objectSpread(_objectSpread({}, clone(c)), {}, {\n    teacher: clone(teacher)\n  });\n}\nexport async function createCourse(payload) {\n  await delay();\n  const id = 'c' + Math.floor(Math.random() * 100000);\n  const next = _objectSpread({\n    id,\n    published: false,\n    lessons: 0,\n    reviews: 0,\n    rating: 0,\n    bestSeller: false\n  }, payload);\n  DB.unshift(next);\n  return clone(next);\n}\nexport async function updateCourse(id, payload) {\n  await delay();\n  const idx = findCourseIndex(id);\n  if (idx === -1) return clone(_objectSpread({\n    id\n  }, payload));\n  DB[idx] = _objectSpread(_objectSpread({}, DB[idx]), payload);\n  return clone(DB[idx]);\n}\nexport async function deleteCourse(id) {\n  await delay();\n  DB = DB.filter(x => x.id !== id);\n  return {\n    ok: true,\n    id\n  };\n}\nexport async function setCoursePublished(id, published) {\n  await delay(200);\n  const idx = findCourseIndex(id);\n  if (idx === -1) return {\n    ok: false\n  };\n  DB[idx].published = !!published;\n  return clone(DB[idx]);\n}","map":{"version":3,"names":["courses","SEED_COURSES","instructors","SEED_INSTRUCTORS","delay","ms","Promise","res","setTimeout","clone","v","JSON","parse","stringify","DB","map","c","_objectSpread","published","INSTRUCTORS","findCourseIndex","id","findIndex","x","getCourses","offset","limit","q","category","onlyPublished","arr","qq","String","toLowerCase","filter","title","includes","author","categoryId","total","length","items","slice","hasMore","getCourse","find","teacher","t","teacherId","createCourse","payload","Math","floor","random","next","lessons","reviews","rating","bestSeller","unshift","updateCourse","idx","deleteCourse","ok","setCoursePublished"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/services/mockApi.js"],"sourcesContent":["// Fallback mock API with in-memory persistence for the session\nimport { courses as SEED_COURSES, instructors as SEED_INSTRUCTORS } from '../mock/data';\n\nfunction delay(ms = 400) {\n  return new Promise((res) => setTimeout(res, ms));\n}\n\nfunction clone(v) {\n  return JSON.parse(JSON.stringify(v));\n}\n\n// In-memory DB for the session (non-persistent)\nlet DB = clone(SEED_COURSES).map((c) => ({ published: true, ...c }));\nconst INSTRUCTORS = clone(SEED_INSTRUCTORS);\n\nfunction findCourseIndex(id) {\n  return DB.findIndex((x) => x.id === id);\n}\n\nexport async function getCourses({ offset = 0, limit = 10, q = '', category, onlyPublished = false } = {}) {\n  await delay();\n  let arr = DB;\n  if (q) {\n    const qq = String(q).toLowerCase();\n    arr = arr.filter((c) => c.title.toLowerCase().includes(qq) || (c.author || '').toLowerCase().includes(qq));\n  }\n  if (category) {\n    arr = arr.filter((c) => c.categoryId === category);\n  }\n  if (onlyPublished) {\n    arr = arr.filter((c) => c.published !== false);\n  }\n  const total = arr.length;\n  const items = arr.slice(offset, offset + limit);\n  return { items: clone(items), total, hasMore: offset + limit < total };\n}\n\nexport async function getCourse(id) {\n  await delay();\n  const c = DB.find((x) => x.id === id) || DB[0];\n  const teacher = INSTRUCTORS.find((t) => t.id === c.teacherId) || INSTRUCTORS[0];\n  return { ...clone(c), teacher: clone(teacher) };\n}\n\n// Admin-like operations on mock data (in-memory persistence)\nexport async function createCourse(payload) {\n  await delay();\n  const id = 'c' + Math.floor(Math.random() * 100000);\n  const next = { id, published: false, lessons: 0, reviews: 0, rating: 0, bestSeller: false, ...payload };\n  DB.unshift(next);\n  return clone(next);\n}\n\nexport async function updateCourse(id, payload) {\n  await delay();\n  const idx = findCourseIndex(id);\n  if (idx === -1) return clone({ id, ...payload });\n  DB[idx] = { ...DB[idx], ...payload };\n  return clone(DB[idx]);\n}\n\nexport async function deleteCourse(id) {\n  await delay();\n  DB = DB.filter((x) => x.id !== id);\n  return { ok: true, id };\n}\n\nexport async function setCoursePublished(id, published) {\n  await delay(200);\n  const idx = findCourseIndex(id);\n  if (idx === -1) return { ok: false };\n  DB[idx].published = !!published;\n  return clone(DB[idx]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}