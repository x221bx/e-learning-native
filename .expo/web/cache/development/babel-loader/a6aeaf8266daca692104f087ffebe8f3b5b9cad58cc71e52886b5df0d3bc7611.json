{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/components/CategoryGrid.jsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport CategoryCard from './CategoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategoryGrid({\n  items = [],\n  onPressCategory\n}) {\n  const {\n    width\n  } = useWindowDimensions();\n  const isWeb = Platform.OS === 'web';\n  let columns = 2;\n  if (isWeb) {\n    if (width >= 1200) columns = 4;else if (width >= 800) columns = 3;\n  }\n  const gutter = 12;\n  const itemWidthPercent = `${(100 - (columns - 1) * 2) / columns}%`;\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginBottom: 12\n    },\n    children: items.map((c, idx) => _jsxDEV(View, {\n      style: {\n        width: itemWidthPercent,\n        marginRight: (idx + 1) % columns === 0 ? 0 : '2%',\n        marginBottom: gutter\n      },\n      children: _jsxDEV(CategoryCard, {\n        name: c.name,\n        icon: c.icon,\n        color: c.color,\n        onPress: () => onPressCategory?.(c)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","View","useWindowDimensions","Platform","CategoryCard","jsxDEV","_jsxDEV","CategoryGrid","items","onPressCategory","width","isWeb","OS","columns","gutter","itemWidthPercent","style","flexDirection","flexWrap","marginBottom","children","map","c","idx","marginRight","name","icon","color","onPress","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/components/CategoryGrid.jsx"],"sourcesContent":["import React from 'react';\nimport { View, useWindowDimensions, Platform } from 'react-native';\nimport CategoryCard from './CategoryCard';\n\nexport default function CategoryGrid({ items = [], onPressCategory }) {\n  const { width } = useWindowDimensions();\n  const isWeb = Platform.OS === 'web';\n  let columns = 2;\n  if (isWeb) {\n    if (width >= 1200) columns = 4;\n    else if (width >= 800) columns = 3;\n  }\n  const gutter = 12;\n  const itemWidthPercent = `${(100 - (columns - 1) * 2) / columns}%`;\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap', marginBottom: 12 }}>\n      {items.map((c, idx) => (\n        <View key={c.id} style={{ width: itemWidthPercent, marginRight: (idx + 1) % columns === 0 ? 0 : '2%', marginBottom: gutter }}>\n          <CategoryCard name={c.name} icon={c.icon} color={c.color} onPress={() => onPressCategory?.(c)} />\n        </View>\n      ))}\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,mBAAA;AAAA,OAAAC,QAAA;AAE1B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,YAAYA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC;AAAgB,CAAC,EAAE;EACpE,MAAM;IAAEC;EAAM,CAAC,GAAGR,mBAAmB,CAAC,CAAC;EACvC,MAAMS,KAAK,GAAGR,QAAQ,CAACS,EAAE,KAAK,KAAK;EACnC,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIF,KAAK,EAAE;IACT,IAAID,KAAK,IAAI,IAAI,EAAEG,OAAO,GAAG,CAAC,CAAC,KAC1B,IAAIH,KAAK,IAAI,GAAG,EAAEG,OAAO,GAAG,CAAC;EACpC;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,gBAAgB,GAAG,GAAG,CAAC,GAAG,GAAG,CAACF,OAAO,GAAG,CAAC,IAAI,CAAC,IAAIA,OAAO,GAAG;EAElE,OACEP,OAAA,CAACL,IAAI;IAACe,KAAK,EAAE;MAAEC,aAAa,EAAE,KAAK;MAAEC,QAAQ,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,QAAA,EACvEZ,KAAK,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAChBjB,OAAA,CAACL,IAAI;MAAYe,KAAK,EAAE;QAAEN,KAAK,EAAEK,gBAAgB;QAAES,WAAW,EAAE,CAACD,GAAG,GAAG,CAAC,IAAIV,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI;QAAEM,YAAY,EAAEL;MAAO,CAAE;MAAAM,QAAA,EAC3Hd,OAAA,CAACF,YAAY;QAACqB,IAAI,EAAEH,CAAC,CAACG,IAAK;QAACC,IAAI,EAAEJ,CAAC,CAACI,IAAK;QAACC,KAAK,EAAEL,CAAC,CAACK,KAAM;QAACC,OAAO,EAAEA,CAAA,KAAMnB,eAAe,GAAGa,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADxFV,CAAC,CAACW,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}