{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport config from '../config';\nimport * as mock from './mockApi';\nfunction buildQuery(params = {}) {\n  const q = new URLSearchParams();\n  Object.entries(params).forEach(([k, v]) => {\n    if (v !== undefined && v !== null && v !== '') q.append(k, String(v));\n  });\n  const s = q.toString();\n  return s ? `?${s}` : '';\n}\nfunction sleep(ms) {\n  return new Promise(res => setTimeout(res, ms));\n}\nfunction normalizeError(err, status) {\n  const msg = err?.message || 'Request failed';\n  const isNetworkError = msg === 'Failed to fetch' || msg.includes('Network') || msg.includes('Aborted');\n  return {\n    message: msg,\n    status: status || null,\n    isNetworkError\n  };\n}\nasync function request(path, {\n  method = 'GET',\n  body,\n  headers,\n  timeout = 12000,\n  retries = 2\n} = {}) {\n  const base = config.API_BASE_URL;\n  if (!base) throw new Error('NO_API_BASE');\n  const url = base.replace(/\\/$/, '') + path;\n  let attempt = 0;\n  let lastError = null;\n  while (attempt <= retries) {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    try {\n      const res = await fetch(url, {\n        method,\n        headers: _objectSpread({\n          'Content-Type': 'application/json'\n        }, headers || {}),\n        body: body ? JSON.stringify(body) : undefined,\n        signal: controller.signal\n      });\n      clearTimeout(id);\n      if (!res.ok) {\n        const text = await res.text().catch(() => '');\n        const err = new Error(`API ${res.status}: ${text || res.statusText}`);\n        if (res.status >= 400 && res.status < 500 && res.status !== 408) {\n          throw err;\n        }\n        lastError = normalizeError(err, res.status);\n        attempt += 1;\n        if (attempt > retries) throw err;\n        await sleep(300 * attempt);\n        continue;\n      }\n      const ct = res.headers.get('content-type') || '';\n      if (ct.includes('application/json')) return res.json();\n      return res.text();\n    } catch (e) {\n      clearTimeout(id);\n      lastError = normalizeError(e);\n      attempt += 1;\n      if (attempt > retries) throw e;\n      await sleep(300 * attempt);\n    }\n  }\n  throw lastError || new Error('Request failed');\n}\nexport const CoursesAPI = {\n  async list(params) {\n    if (!config.API_BASE_URL) return mock.getCourses(params);\n    const {\n      offset,\n      limit,\n      q,\n      category,\n      onlyPublished\n    } = params || {};\n    return request(`/courses${buildQuery({\n      offset,\n      limit,\n      q,\n      category,\n      onlyPublished\n    })}`);\n  },\n  async get(id) {\n    if (!config.API_BASE_URL) return mock.getCourse(id);\n    return request(`/courses/${id}`);\n  },\n  async create(payload) {\n    if (!config.API_BASE_URL) return mock.createCourse(payload);\n    return request(`/courses`, {\n      method: 'POST',\n      body: payload\n    });\n  },\n  async update(id, payload) {\n    if (!config.API_BASE_URL) return mock.updateCourse(id, payload);\n    return request(`/courses/${id}`, {\n      method: 'PUT',\n      body: payload\n    });\n  },\n  async remove(id) {\n    if (!config.API_BASE_URL) return mock.deleteCourse(id);\n    return request(`/courses/${id}`, {\n      method: 'DELETE'\n    });\n  },\n  async setPublished(id, published) {\n    if (!config.API_BASE_URL) return mock.setCoursePublished(id, published);\n    return request(`/courses/${id}/publish`, {\n      method: 'POST',\n      body: {\n        published\n      }\n    });\n  }\n};","map":{"version":3,"names":["config","mock","buildQuery","params","q","URLSearchParams","Object","entries","forEach","k","v","undefined","append","String","s","toString","sleep","ms","Promise","res","setTimeout","normalizeError","err","status","msg","message","isNetworkError","includes","request","path","method","body","headers","timeout","retries","base","API_BASE_URL","Error","url","replace","attempt","lastError","controller","AbortController","id","abort","fetch","_objectSpread","JSON","stringify","signal","clearTimeout","ok","text","catch","statusText","ct","get","json","e","CoursesAPI","list","getCourses","offset","limit","category","onlyPublished","getCourse","create","payload","createCourse","update","updateCourse","remove","deleteCourse","setPublished","published","setCoursePublished"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/services/api.js"],"sourcesContent":["import config from '../config';\nimport * as mock from './mockApi';\n\nfunction buildQuery(params = {}) {\n  const q = new URLSearchParams();\n  Object.entries(params).forEach(([k, v]) => {\n    if (v !== undefined && v !== null && v !== '') q.append(k, String(v));\n  });\n  const s = q.toString();\n  return s ? `?${s}` : '';\n}\n\nfunction sleep(ms) {\n  return new Promise((res) => setTimeout(res, ms));\n}\n\nfunction normalizeError(err, status) {\n  const msg = err?.message || 'Request failed';\n  const isNetworkError = msg === 'Failed to fetch' || msg.includes('Network') || msg.includes('Aborted');\n  return { message: msg, status: status || null, isNetworkError };\n}\n\nasync function request(path, { method = 'GET', body, headers, timeout = 12000, retries = 2 } = {}) {\n  const base = config.API_BASE_URL;\n  if (!base) throw new Error('NO_API_BASE');\n  const url = base.replace(/\\/$/, '') + path;\n\n  let attempt = 0;\n  let lastError = null;\n\n  while (attempt <= retries) {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    try {\n      const res = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json', ...(headers || {}) },\n        body: body ? JSON.stringify(body) : undefined,\n        signal: controller.signal,\n      });\n      clearTimeout(id);\n      if (!res.ok) {\n        const text = await res.text().catch(() => '');\n        const err = new Error(`API ${res.status}: ${text || res.statusText}`);\n        // No retry on 4xx except 408\n        if (res.status >= 400 && res.status < 500 && res.status !== 408) {\n          throw err;\n        }\n        lastError = normalizeError(err, res.status);\n        attempt += 1;\n        if (attempt > retries) throw err;\n        await sleep(300 * attempt); // simple backoff\n        continue;\n      }\n      const ct = res.headers.get('content-type') || '';\n      if (ct.includes('application/json')) return res.json();\n      return res.text();\n    } catch (e) {\n      clearTimeout(id);\n      lastError = normalizeError(e);\n      attempt += 1;\n      if (attempt > retries) throw e;\n      await sleep(300 * attempt);\n    }\n  }\n  // Should not reach here\n  throw lastError || new Error('Request failed');\n}\n\nexport const CoursesAPI = {\n  async list(params) {\n    if (!config.API_BASE_URL) return mock.getCourses(params);\n    const { offset, limit, q, category, onlyPublished } = params || {};\n    return request(`/courses${buildQuery({ offset, limit, q, category, onlyPublished })}`);\n  },\n  async get(id) {\n    if (!config.API_BASE_URL) return mock.getCourse(id);\n    return request(`/courses/${id}`);\n  },\n  async create(payload) {\n    if (!config.API_BASE_URL) return mock.createCourse(payload);\n    return request(`/courses`, { method: 'POST', body: payload });\n  },\n  async update(id, payload) {\n    if (!config.API_BASE_URL) return mock.updateCourse(id, payload);\n    return request(`/courses/${id}`, { method: 'PUT', body: payload });\n  },\n  async remove(id) {\n    if (!config.API_BASE_URL) return mock.deleteCourse(id);\n    return request(`/courses/${id}`, { method: 'DELETE' });\n  },\n  async setPublished(id, published) {\n    if (!config.API_BASE_URL) return mock.setCoursePublished(id, published);\n    return request(`/courses/${id}/publish`, { method: 'POST', body: { published } });\n  },\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}