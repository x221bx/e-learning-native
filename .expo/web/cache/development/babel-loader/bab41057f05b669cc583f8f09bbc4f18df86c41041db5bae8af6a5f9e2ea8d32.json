{"ast":null,"code":"import * as Localization from 'expo-localization';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nconst I18nLib = require('i18n-js');\nconst {\n  I18n\n} = I18nLib;\nimport en from './en.json';\nimport ar from './ar.json';\nconst i18n = new I18n({\n  en,\n  ar\n});\ni18n.enableFallback = true;\nconst BASE_LOCALE = 'en';\nconst _pendingTranslations = new Set();\nfunction _setNested(obj, path, value) {\n  if (!obj) return;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length - 1; i++) {\n    const p = parts[i];\n    if (!o[p] || typeof o[p] !== 'object') o[p] = {};\n    o = o[p];\n  }\n  o[parts[parts.length - 1]] = value;\n}\nfunction _hasNested(obj, path) {\n  if (!obj) return false;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length; i++) {\n    o = o?.[parts[i]];\n    if (o === undefined) return false;\n  }\n  return true;\n}\nfunction _getNested(obj, path) {\n  if (!obj) return undefined;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length; i++) {\n    o = o?.[parts[i]];\n    if (o === undefined) return undefined;\n  }\n  return o;\n}\nasync function _myMemoryTranslate(text, from, to) {\n  if (!__DEV__) return text;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), 6000);\n  try {\n    const res = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=${from}|${to}`, {\n      signal: controller.signal\n    });\n    const data = await res.json();\n    const translated = data?.responseData?.translatedText;\n    return translated || text;\n  } catch (_e) {\n    if (__DEV__) console.warn('i18n remote translate failed:', _e?.message || _e);\n    return text;\n  } finally {\n    clearTimeout(id);\n  }\n}\nasync function _translateAndCacheMissing(key, baseText, from, to) {\n  const cacheKey = `${to}|${key}`;\n  if (_pendingTranslations.has(cacheKey)) return;\n  _pendingTranslations.add(cacheKey);\n  const translated = await _myMemoryTranslate(baseText, from, to);\n  if (!i18n.translations[to]) i18n.translations[to] = {};\n  _setNested(i18n.translations[to], key, translated);\n  _pendingTranslations.delete(cacheKey);\n}\ni18n.missingTranslation.register('lazyBase', (inst, scope, options = {}) => {\n  const key = Array.isArray(scope) ? scope.join(inst.defaultSeparator) : scope;\n  const current = options.locale || inst.locale || BASE_LOCALE;\n  const baseFromDict = _getNested(inst.translations?.[BASE_LOCALE], key);\n  const baseText = typeof baseFromDict === 'string' ? baseFromDict : key;\n  if (__DEV__ && current !== BASE_LOCALE && typeof baseText === 'string') {\n    _translateAndCacheMissing(key, baseText, BASE_LOCALE, current);\n  }\n  return baseText;\n});\ni18n.missingBehavior = 'lazyBase';\ni18n.locale = (Localization?.locale || 'en').startsWith('ar') ? 'ar' : 'en';\nif (Platform.OS !== 'web') {\n  try {\n    I18nManager.allowRTL(true);\n    const wantRTL = i18n.locale.startsWith('ar');\n    if (I18nManager.isRTL !== wantRTL) {\n      I18nManager.forceRTL(wantRTL);\n    }\n  } catch (e) {}\n}\nexport function setLocale(locale) {\n  i18n.locale = locale;\n  if (Platform.OS !== 'web') {\n    try {\n      I18nManager.allowRTL(true);\n      const wantRTL = locale.startsWith('ar');\n      if (I18nManager.isRTL !== wantRTL) {\n        I18nManager.forceRTL(wantRTL);\n      }\n    } catch (e) {}\n  }\n}\nexport function t(key, options) {\n  const out = i18n.t(key, options);\n  const current = i18n.locale || BASE_LOCALE;\n  if (__DEV__ && current !== BASE_LOCALE) {\n    const hasInLocale = _hasNested(i18n.translations[current], key);\n    if (!hasInLocale) {\n      const baseFromDict = _getNested(i18n.translations?.[BASE_LOCALE], key);\n      const baseText = typeof baseFromDict === 'string' ? baseFromDict : key;\n      if (typeof baseText === 'string' && baseText) {\n        _translateAndCacheMissing(key, baseText, BASE_LOCALE, current);\n      }\n    }\n  }\n  return out;\n}\nexport function getLocale() {\n  return i18n.locale;\n}","map":{"version":3,"names":["Localization","I18nManager","Platform","I18nLib","require","I18n","en","ar","i18n","enableFallback","BASE_LOCALE","_pendingTranslations","Set","_setNested","obj","path","value","parts","split","o","i","length","p","_hasNested","undefined","_getNested","_myMemoryTranslate","text","from","to","__DEV__","controller","AbortController","id","setTimeout","abort","res","fetch","encodeURIComponent","signal","data","json","translated","responseData","translatedText","_e","console","warn","message","clearTimeout","_translateAndCacheMissing","key","baseText","cacheKey","has","add","translations","delete","missingTranslation","register","inst","scope","options","Array","isArray","join","defaultSeparator","current","locale","baseFromDict","missingBehavior","startsWith","OS","allowRTL","wantRTL","isRTL","forceRTL","e","setLocale","t","out","hasInLocale","getLocale"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/i18n/index.js"],"sourcesContent":["import * as Localization from 'expo-localization';\nimport { I18nManager, Platform } from 'react-native';\n// Use CommonJS build and instantiate I18n to ensure `t` exists\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst I18nLib = require('i18n-js');\nconst { I18n } = I18nLib;\nimport en from './en.json';\nimport ar from './ar.json';\n\nconst i18n = new I18n({ en, ar });\n// Enable fallback to default locale\ni18n.enableFallback = true;\n\n// Auto-translate missing keys at runtime using MyMemory API (minimal + lazy)\nconst BASE_LOCALE = 'en';\nconst _pendingTranslations = new Set();\n\nfunction _setNested(obj, path, value) {\n  if (!obj) return;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length - 1; i++) {\n    const p = parts[i];\n    if (!o[p] || typeof o[p] !== 'object') o[p] = {};\n    o = o[p];\n  }\n  o[parts[parts.length - 1]] = value;\n}\n\nfunction _hasNested(obj, path) {\n  if (!obj) return false;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length; i++) {\n    o = o?.[parts[i]];\n    if (o === undefined) return false;\n  }\n  return true;\n}\n\nfunction _getNested(obj, path) {\n  if (!obj) return undefined;\n  const parts = path.split('.');\n  let o = obj;\n  for (let i = 0; i < parts.length; i++) {\n    o = o?.[parts[i]];\n    if (o === undefined) return undefined;\n  }\n  return o;\n}\n\nasync function _myMemoryTranslate(text, from, to) {\n  // Disable remote translation in production to avoid runtime network dependency\n  if (!__DEV__) return text;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), 6000);\n  try {\n    const res = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=${from}|${to}`,\n      { signal: controller.signal }\n    );\n    const data = await res.json();\n    const translated = data?.responseData?.translatedText;\n    return translated || text;\n  } catch (_e) {\n    if (__DEV__) console.warn('i18n remote translate failed:', _e?.message || _e);\n    return text;\n  } finally {\n    clearTimeout(id);\n  }\n}\n\nasync function _translateAndCacheMissing(key, baseText, from, to) {\n  const cacheKey = `${to}|${key}`;\n  if (_pendingTranslations.has(cacheKey)) return;\n  _pendingTranslations.add(cacheKey);\n  const translated = await _myMemoryTranslate(baseText, from, to);\n  if (!i18n.translations[to]) i18n.translations[to] = {};\n  _setNested(i18n.translations[to], key, translated);\n  _pendingTranslations.delete(cacheKey);\n}\n\n// Register a custom missing translation behavior instead of overriding the object\ni18n.missingTranslation.register('lazyBase', (inst, scope, options = {}) => {\n  const key = Array.isArray(scope) ? scope.join(inst.defaultSeparator) : scope;\n  const current = options.locale || inst.locale || BASE_LOCALE;\n  const baseFromDict = _getNested(inst.translations?.[BASE_LOCALE], key);\n  const baseText = typeof baseFromDict === 'string' ? baseFromDict : key;\n  if (__DEV__ && current !== BASE_LOCALE && typeof baseText === 'string') {\n    _translateAndCacheMissing(key, baseText, BASE_LOCALE, current);\n  }\n  return baseText;\n});\ni18n.missingBehavior = 'lazyBase';\n\n// Initialize with device locale, default to English\ni18n.locale = (Localization?.locale || 'en').startsWith('ar') ? 'ar' : 'en';\n// Sync RTL on startup based on initial locale\nif (Platform.OS !== 'web') {\n  try {\n    I18nManager.allowRTL(true);\n    const wantRTL = i18n.locale.startsWith('ar');\n    if (I18nManager.isRTL !== wantRTL) {\n      I18nManager.forceRTL(wantRTL);\n    }\n  } catch (e) {}\n}\n\nexport function setLocale(locale) {\n  i18n.locale = locale;\n  // Apply RTL when Arabic is selected\n  if (Platform.OS !== 'web') {\n    try {\n      I18nManager.allowRTL(true);\n      const wantRTL = locale.startsWith('ar');\n      if (I18nManager.isRTL !== wantRTL) {\n        I18nManager.forceRTL(wantRTL);\n      }\n    } catch (e) {}\n  }\n}\n\nexport function t(key, options) {\n  const out = i18n.t(key, options);\n  const current = i18n.locale || BASE_LOCALE;\n  // If current locale lacks this key (falling back to en), fetch translation lazily\n  if (__DEV__ && current !== BASE_LOCALE) {\n    const hasInLocale = _hasNested(i18n.translations[current], key);\n    if (!hasInLocale) {\n      const baseFromDict = _getNested(i18n.translations?.[BASE_LOCALE], key);\n      const baseText = typeof baseFromDict === 'string' ? baseFromDict : key;\n      if (typeof baseText === 'string' && baseText) {\n        _translateAndCacheMissing(key, baseText, BASE_LOCALE, current);\n      }\n    }\n  }\n  return out;\n}\n\nexport function getLocale() {\n  return i18n.locale;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}