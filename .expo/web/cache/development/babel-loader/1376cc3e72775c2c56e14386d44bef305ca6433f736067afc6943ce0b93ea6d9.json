{"ast":null,"code":"export default function getDrawerStatusFromState(state) {\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n  const entry = state.history.find(it => it.type === 'drawer');\n  return (entry === null || entry === void 0 ? void 0 : entry.status) ?? state.default ?? 'closed';\n}","map":{"version":3,"names":["getDrawerStatusFromState","state","history","Error","entry","find","it","type","status","default"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/node_modules/@react-navigation/drawer/src/utils/getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"],"mappings":"AAMA,eAAe,SAASA,wBAAwBA,CAC9CC,KAA2C,EAC7B;EACd,IAAIA,KAAK,CAACC,OAAO,IAAI,IAAI,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,sGAAsG,CACvG;EACH;EAEA,MAAMC,KAAK,GAAGH,KAAK,CAACC,OAAO,CAACG,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAK,QAAQ,CAEhD;EAEb,OAAO,CAAAH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,MAAM,KAAIP,KAAK,CAACQ,OAAO,IAAI,QAAQ;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}