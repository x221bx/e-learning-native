{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport const setDarkModeAsync = createAsyncThunk('ui/setDarkModeAsync', async value => {\n  await AsyncStorage.setItem('@elearning_dark_mode', JSON.stringify(value));\n  return value;\n});\nexport const setLocaleAsync = createAsyncThunk('ui/setLocaleAsync', async locale => {\n  await AsyncStorage.setItem('@elearning_locale', locale);\n  return locale;\n});\nconst slice = createSlice({\n  name: 'ui',\n  initialState: {\n    darkMode: false,\n    hasUnread: true,\n    locale: 'en',\n    primaryColor: null,\n    siteTitle: 'E-Learning'\n  },\n  reducers: {\n    setUnread(state, action) {\n      state.hasUnread = Boolean(action.payload);\n    },\n    setPrimaryColor(state, action) {\n      state.primaryColor = action.payload || null;\n    },\n    setSiteTitle(state, action) {\n      state.siteTitle = action.payload || 'E-Learning';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(setDarkModeAsync.fulfilled, (state, action) => {\n      state.darkMode = action.payload;\n    }).addCase(setLocaleAsync.fulfilled, (state, action) => {\n      state.locale = action.payload;\n    });\n  }\n});\nexport const {\n  setUnread,\n  setPrimaryColor,\n  setSiteTitle\n} = slice.actions;\nexport const setDarkMode = setDarkModeAsync;\nexport const setLocaleUI = setLocaleAsync;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","AsyncStorage","setDarkModeAsync","value","setItem","JSON","stringify","setLocaleAsync","locale","slice","name","initialState","darkMode","hasUnread","primaryColor","siteTitle","reducers","setUnread","state","action","Boolean","payload","setPrimaryColor","setSiteTitle","extraReducers","builder","addCase","fulfilled","actions","setDarkMode","setLocaleUI","reducer"],"sources":["/Users/mahmoudessam/Desktop/Qotoz/native-progect/e-learning-native/src/store/uiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// ✅ Async thunks for storage operations\nexport const setDarkModeAsync = createAsyncThunk(\n    'ui/setDarkModeAsync',\n    async (value) => {\n        await AsyncStorage.setItem('@elearning_dark_mode', JSON.stringify(value));\n        return value;\n    }\n);\n\nexport const setLocaleAsync = createAsyncThunk(\n    'ui/setLocaleAsync',\n    async (locale) => {\n        await AsyncStorage.setItem('@elearning_locale', locale);\n        return locale;\n    }\n);\n\nconst slice = createSlice({\n    name: 'ui',\n    initialState: { darkMode: false, hasUnread: true, locale: 'en', primaryColor: null, siteTitle: 'E-Learning' },\n    reducers: {\n        // ✅ Pure reducer - no side effects\n        setUnread(state, action) {\n            state.hasUnread = Boolean(action.payload);\n        },\n        setPrimaryColor(state, action) {\n            state.primaryColor = action.payload || null;\n        },\n        setSiteTitle(state, action) {\n            state.siteTitle = action.payload || 'E-Learning';\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(setDarkModeAsync.fulfilled, (state, action) => {\n                state.darkMode = action.payload;\n            })\n            .addCase(setLocaleAsync.fulfilled, (state, action) => {\n                state.locale = action.payload;\n            });\n    },\n});\n\nexport const { setUnread, setPrimaryColor, setSiteTitle } = slice.actions;\n\n export const setDarkMode = setDarkModeAsync;\nexport const setLocaleUI = setLocaleAsync;\n\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,YAAY,MAAM,2CAA2C;AAGpE,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC5C,qBAAqB,EACrB,MAAOG,KAAK,IAAK;EACb,MAAMF,YAAY,CAACG,OAAO,CAAC,sBAAsB,EAAEC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;EACzE,OAAOA,KAAK;AAChB,CACJ,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGP,gBAAgB,CAC1C,mBAAmB,EACnB,MAAOQ,MAAM,IAAK;EACd,MAAMP,YAAY,CAACG,OAAO,CAAC,mBAAmB,EAAEI,MAAM,CAAC;EACvD,OAAOA,MAAM;AACjB,CACJ,CAAC;AAED,MAAMC,KAAK,GAAGV,WAAW,CAAC;EACtBW,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE;IAAEC,QAAQ,EAAE,KAAK;IAAEC,SAAS,EAAE,IAAI;IAAEL,MAAM,EAAE,IAAI;IAAEM,YAAY,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAa,CAAC;EAC7GC,QAAQ,EAAE;IAENC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACL,SAAS,GAAGO,OAAO,CAACD,MAAM,CAACE,OAAO,CAAC;IAC7C,CAAC;IACDC,eAAeA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACE,OAAO,IAAI,IAAI;IAC/C,CAAC;IACDE,YAAYA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACH,SAAS,GAAGI,MAAM,CAACE,OAAO,IAAI,YAAY;IACpD;EACJ,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACxB,gBAAgB,CAACyB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACE,OAAO;IACnC,CAAC,CAAC,CACDK,OAAO,CAACnB,cAAc,CAACoB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACV,MAAM,GAAGW,MAAM,CAACE,OAAO;IACjC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,SAAS;EAAEK,eAAe;EAAEC;AAAa,CAAC,GAAGd,KAAK,CAACmB,OAAO;AAExE,OAAO,MAAMC,WAAW,GAAG3B,gBAAgB;AAC5C,OAAO,MAAM4B,WAAW,GAAGvB,cAAc;AAEzC,eAAeE,KAAK,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}